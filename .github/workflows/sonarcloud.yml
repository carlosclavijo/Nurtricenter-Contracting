name: SonarCloud Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore Contracting.sln

    - name: Build solution
      run: dotnet build Contracting.sln --no-restore --configuration Release

    - name: Run tests with coverage
      run: |
        dotnet test Contracting.Test/Contracting.Test.csproj \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults \
          --logger "trx"

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Convert coverage to OpenCover
      run: |
        reportgenerator -reports:TestResults/**/coverage.cobertura.xml \
                        -targetdir:coverage-report \
                        -reporttypes:OpenCover

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Run SonarScanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"carlosclavijo_Nurtricenter-Contracting" /o:"carlosclavijo" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage-report/coverage.opencover.xml"

        dotnet build Contracting.sln --no-restore

        dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
