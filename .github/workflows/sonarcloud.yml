name: SonarCloud Analysis

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore Contracting.sln

    - name: Build solution
      run: dotnet build Contracting.sln --no-restore --configuration Release

    - name: Run tests with coverage
      run: |
        dotnet test Contracting.Test/Contracting.Test.csproj \
          --no-build \
          --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutput=./TestResults/coverage/ \
          /p:CoverletOutputFormat=cobertura \
          /p:UseSourceLink=true


    - name: List TestResults folder recursively
      run: ls -R Contracting.Test/TestResults

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Convert coverage to OpenCover format
      run: |
        reportgenerator \
          -reports:TestResults/coverage/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:OpenCover


    - name: List coverage report folder contents
      run: ls -l coverage-report/

    - name: Run SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_SCANNER_OPTS: -Dsonar.cs.opencover.reportsPaths=coverage-report/coverage.opencover.xml
